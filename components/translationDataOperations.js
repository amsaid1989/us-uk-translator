// IMPORT ALL DICTIONARIES
const getDictionary = require("./dictionaries");

function swapMatches(translationData, matchesArray, locale) {
    /*
     * This is the function that does the actual translation.
     *
     * It takes the matchesArray that was generated by the
     * getMatches function and replaces all instances of each
     * phrase with its equivalent from the locale dictionaries.
     *
     * It then adds the translation to the replacements array
     * in the translationData object, so they can highlighted
     * later by the highlightTranslation method.
     */
    if (matchesArray.length === 0) {
        return translationData;
    }

    let output = translationData;

    const dictionaries = getDictionary(locale);

    for (const dict of dictionaries) {
        for (const match of matchesArray) {
            const regex = new RegExp(match, "g");

            if (dict[match]) {
                if (!output.translated) {
                    output.translated = true;
                }
                output.replacements.push(dict[match]);
                output.translation = output.translation.replace(
                    regex,
                    dict[match]
                );
            }
        }
    }

    // Since the function might encounter a phrase multiple times,
    // it will duplicate it in the replacements array. We don't
    // need these duplicates, so we remove them before we return
    // the translationData object.
    output.replacements = Array.from(new Set(output.replacements));

    return output;
}

module.exports = swapMatches;
